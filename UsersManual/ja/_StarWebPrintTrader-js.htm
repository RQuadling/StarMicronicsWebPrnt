<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"  lang="ja" xml:lang="ja">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Star WebPRNT ユーザーズマニュアル</title>
    <link href="html5reset-1.6.1.css" rel="stylesheet" type="text/css" />
    <link href="webPRNT_layout.css" rel="stylesheet" type="text/css" />
    <link href="webPRNT_print_layout.css" rel="stylesheet" type="text/css" media="print" />

<!-- ie10にて条件付きコメント([if IE]の箇所）がサポートされなくなったことに対する対処　　-->
    <meta http-equiv="X-UA-Compatible" content="IE=EmulateIE9">
   <!--[if IE ]>
        <link rel="stylesheet" type="text/css" href="webPRNT_layout_ie.css"></script>
        <link rel="stylesheet" type="text/css" href="webPRNT_print_layout_ie.css" media="print"></script>
    <![endif]-->
    
    <script src="jquery-1.10.2.min.js"></script>
    <script>
    
    $(function tggleNavi() {
        $('#naviArrow').click(function(){
           $('#mainNavi').slideToggle('slow');
           
       });
    });

    </script>
    
</head>


<body>

<div id="toTop">
    <a href="index.htm"><img id="webPRNTLogo" src="../illust/WebPRNT_Logo.png" /></a>
    <h1> Star WebPRNT User's Manual </h1>

    <div class="clear"></div>
</div>

<div id="naviArrowSection">
    <a id="naviArrow" onclick="tggleNavi()"><h5> Contents 表示/非表示</h5></a>
</div>

<!-- wrapp : mainNavi + mainContents-->
<div id="wrapp" class="clear">
    

<!-- mainNavi -->

    <div id="mainNavi">
	<navi>
	<ul>
	<li><a href="_sampleProgram.htm">Star WebPRNT SDK</a></li>
	<li><a href="_sampleProgram.htm#sampleProgramConcept">システム構築例</a></li>
	<li><a href="_sampleProgram.htm#sampleProgramList">プログラムファイルリスト</a></li>
	<li><a href="_sampleProgram.htm#webServerRegistration">Webサーバへの登録</a></li>
	<li><a href="_sampleProgram.htm#howToUse">使用方法</a></li>
	</ul>
	<ul>
	<li><a href="_StarWebPrintBuilder-js.htm">StarWebPrintBuilder.js</a></li>
	<li><a href="_StarWebPrintBuilder-js.htm#StarWebPrintBuilder">StarWebPrintBuilder</a></li>
	<li><a href="_StarWebPrintBuilder-js.htm#createAlignmentElement">createAlignmentElement</a></li>
	<li><a href="_StarWebPrintBuilder-js.htm#createBarcodeElement">createBarcodeElement</a></li>
	<li><a href="_StarWebPrintBuilder-js.htm#createBitImageElement">createBitImageElement</a></li>
	<li><a href="_StarWebPrintBuilder-js.htm#createCutPaperElement">createCutPaperElement</a></li>
	<li><a href="_StarWebPrintBuilder-js.htm#createFeedElement">createFeedElement</a></li>
	<li><a href="_StarWebPrintBuilder-js.htm#createInitializationElement">createInitializationElement</a></li>
	<li><a href="_StarWebPrintBuilder-js.htm#createLogoElement">createLogoElement</a></li>
	<li><a href="_StarWebPrintBuilder-js.htm#createPdf417Element">createPdf417Element</a></li>
	<li><a href="_StarWebPrintBuilder-js.htm#createPeripheralElement">createPeripheralElement</a></li>
	<li><a href="_StarWebPrintBuilder-js.htm#createQrCodeElement">createQrCodeElement</a></li>
	<li><a href="_StarWebPrintBuilder-js.htm#createRawDataElement">createRawDataElement</a></li>
	<li><a href="_StarWebPrintBuilder-js.htm#createRuledLineElement">createRuledLineElement</a></li>
	<li><a href="_StarWebPrintBuilder-js.htm#createSoundElement">createSoundElement</a></li>
	<li><a href="_StarWebPrintBuilder-js.htm#createTextElement">createTextElement</a></li>
	</ul>
	<ul>
	<li><a href="_StarWebPrintTrader-js.htm">StarWebPrintTrader.js</a></li>
	<li><a href="_StarWebPrintTrader-js.htm#StarWebPrintTrader">StarWebPrintTrader</a></li>
	<li><a href="_StarWebPrintTrader-js.htm#sendMessage">sendMessage</a></li>
	<li><a href="_StarWebPrintTrader-js.htm#isCoverOpen">isCoverOpen</a></li>
	<li><a href="_StarWebPrintTrader-js.htm#isOffLine">isOffLine</a></li>
	<li><a href="_StarWebPrintTrader-js.htm#isCompulsionSwitchClose">isCompulsionSwitchClose</a></li>
	<li><a href="_StarWebPrintTrader-js.htm#isEtbCommandExecute">isEtbCommandExecute</a></li>
	<li><a href="_StarWebPrintTrader-js.htm#isHighTemperatureStop">isHighTemperatureStop</a></li>
	<li><a href="_StarWebPrintTrader-js.htm#isNonRecoverableError">isNonRecoverableError</a></li>
	<li><a href="_StarWebPrintTrader-js.htm#isAutoCutterError">isAutoCutterError</a></li>
	<li><a href="_StarWebPrintTrader-js.htm#isBlackMarkError">isBlackMarkError</a></li>
	<li><a href="_StarWebPrintTrader-js.htm#isPaperEnd">isPaperEnd</a></li>
	<li><a href="_StarWebPrintTrader-js.htm#isPaperNearEnd">isPaperNearEnd</a></li>
	<li><a href="_StarWebPrintTrader-js.htm#extractionEtbCounter">extractionEtbCounter</a></li>
	<li><a href="_StarWebPrintTrader-js.htm#onReceive">onReceive</a></li>
	<li><a href="_StarWebPrintTrader-js.htm#onError">onError</a></li>
	</ul>
	<ul>
	<li><a href="_StarBarcodeEncoder-js.htm">StarBarcodeEncoder.js</a></li>
	<li><a href="_StarBarcodeEncoder-js.htm#StarBarcodeEncoder">StarBarcodeEncoder</a></li>
	<li><a href="_StarBarcodeEncoder-js.htm#createUPCE">createUPCE</a></li>
	<li><a href="_StarBarcodeEncoder-js.htm#createUPCA">createUPCA</a></li>
	<li><a href="_StarBarcodeEncoder-js.htm#createJAN8">createJAN8</a></li>
	<li><a href="_StarBarcodeEncoder-js.htm#createJAN13">createJAN13</a></li>
	<li><a href="_StarBarcodeEncoder-js.htm#createCode39">createCode39</a></li>
	<li><a href="_StarBarcodeEncoder-js.htm#createITF">createITF</a></li>
	<li><a href="_StarBarcodeEncoder-js.htm#createCode128">createCode128</a></li>
	<li><a href="_StarBarcodeEncoder-js.htm#createCode93">createCode93</a></li>
	<li><a href="_StarBarcodeEncoder-js.htm#createNW7">createNW7</a></li>
	</ul>
	<ul>
	<li><a href="_StarWebPrintRequestElement.htm">StarWebPRNT送信エレメント</a></li>
	<li><a href="_StarWebPrintRequestElement.htm#root">&lt;root&gt;</a></li>
	<li><a href="_StarWebPrintRequestElement.htm#alignment">&lt;alignment&gt;</a></li>
	<li><a href="_StarWebPrintRequestElement.htm#barcode">&lt;barcode&gt;</a></li>
	<li><a href="_StarWebPrintRequestElement.htm#bitImage">&lt;bitImage&gt;</a></li>
	<li><a href="_StarWebPrintRequestElement.htm#cutpaper">&lt;cutpaper&gt;</a></li>
	<li><a href="_StarWebPrintRequestElement.htm#feed">&lt;feed&gt;</a></li>
	<li><a href="_StarWebPrintRequestElement.htm#initialization">&lt;initialization&gt;</a></li>
	<li><a href="_StarWebPrintRequestElement.htm#logo">&lt;logo&gt;</a></li>
	<li><a href="_StarWebPrintRequestElement.htm#pdf417">&lt;pdf417&gt;</a></li>
	<li><a href="_StarWebPrintRequestElement.htm#peripheral">&lt;peripheral&gt;</a></li>
	<li><a href="_StarWebPrintRequestElement.htm#qrcode">&lt;qrcode&gt;</a></li>
	<li><a href="_StarWebPrintRequestElement.htm#rawdata">&lt;rawdata&gt;</a></li>
	<li><a href="_StarWebPrintRequestElement.htm#ruledline">&lt;ruledline&gt;</a></li>
	<li><a href="_StarWebPrintRequestElement.htm#sound">&lt;sound&gt;</a></li>
	<li><a href="_StarWebPrintRequestElement.htm#text">&lt;text&gt;</a></li>
	</ul>
	<ul>
	<li><a href="_StarWebPrintResponseElement.htm">StarWebPRNT受信エレメント</a></li>
	<li><a href="_StarWebPrintResponseElement.htm#root-response">&lt;root&gt;</a></li>
	<li><a href="_StarWebPrintResponseElement.htm#success">&lt;success&gt;</a></li>
	<li><a href="_StarWebPrintResponseElement.htm#code">&lt;code&gt;</a></li>
	<li><a href="_StarWebPrintResponseElement.htm#status">&lt;status&gt;</a></li>
	</ul>
	<ul>
	<li><a href="_appendixUTF8.htm">付録 UTF-8対応</a></li>
	</ul>

	</navi>
</div>


<div id="mainContents">

    <article id="starWebPrintTrader-js" class="summary">
        <h2>StarWebPrintTrader.js</h2>
        
        <div class="introduction_2">
            <p>
            StarWebPRNT送信エレメント列を送信したり、受信したStarWebPRNT受信エレメント列から状態を確認/抽出します。
            </p>
        </div>
        
        <h4>コンストラクタ</h4>
        <table class="List1">
            <thead>
                <tr><td>名称</td><td>説明</td></tr>
            </thead>
            <tbody>
                <tr><td><a href="#StarWebPrintTrader">StarWebPrintTrader</a></td><td>StarWebPrintTraderオブジェクトを生成します。</td></tr>
            </tbody>
        </table>
    

        <h4>メソッド</h4>
        <table class="List1">
            <thead>
                <tr><td>名称</td><td>説明</td></tr>
            </thead>
            <tbody>
            <tr><td><a href="#sendMessage">sendMessage</a></td><td>StarWebPRNT送信エレメント列を送信します。</td></tr>
            <tr><td><a href="#isCoverOpen">isCoverOpen</a></td><td>StarWebPRNT受信エレメント列からカバーオープンか確認します。</td></tr>
            <tr><td><a href="#isOffLine">isOffLine</a></td><td>StarWebPRNT受信エレメント列からオフラインか確認します。</td></tr>
            <tr><td><a href="#isCompulsionSwitchClose">isCompulsionSwitchClose</a></td><td>StarWebPRNT受信エレメント列からコンパルジョンスイッチがクローズしているか確認します。</td></tr>
            <tr><td><a href="#isEtbCommandExecute">isEtbCommandExecute</a></td><td>StarWebPRNT受信エレメント列からETBコマンド実行済みか確認します。</td></tr>
            <tr><td><a href="#isHighTemperatureStop">isHighTemperatureStop</a></td><td>StarWebPRNT受信エレメント列から印字ヘッド高温停止中か確認します。</td></tr>
            <tr><td><a href="#isNonRecoverableError">isNonRecoverableError</a></td><td>StarWebPRNT受信エレメント列から復帰不可能エラーか確認します。</td></tr>
            <tr><td><a href="#isAutoCutterError">isAutoCutterError</a></td><td>StarWebPRNT受信エレメント列から用紙カッターエラーか確認します。</td></tr>
            <tr><td><a href="#isBlackMarkError">isBlackMarkError</a></td><td>StarWebPRNT受信エレメント列からブラックマークエラーか確認します。</td></tr>
            <tr><td><a href="#isPaperEnd">isPaperEnd</a></td><td>StarWebPRNT受信エレメント列から用紙エンドか確認します。</td></tr>
            <tr><td><a href="#isPaperNearEnd">isPaperNearEnd</a></td><td>StarWebPRNT受信エレメント列から用紙ニアエンドか確認します。</td></tr>
            <tr><td><a href="#extractionEtbCounter">extractionEtbCounter</a></td><td>StarWebPRNT受信エレメント列からETBカウンタを抽出します。</td></tr>
            </tbody>
        </table>
   

        <h4>プロパティ</h4>
        <table class="List1">
            <thead>
                <tr><td>名称</td><td>説明</td></tr>
            </thead>
            <tbody>
                <tr><td><a href="#onReceive">onReceive</a></td><td>正常受信イベント</td></tr>
                <tr><td><a href="#onError">onError</a></td><td>異常受信イベント</td></tr>
            </tbody>
        </table>

        <h4>機種別対応リスト</h4>
        <h5>POSプリンター・AsuraCPRNT</h5>
        <table class="List2">
            <thead>
                <tr><td>名称</td><td>FVP10</td><td>TSP650II</td><td>TSP700II</td><td>TSP800II</td><td>AsuraCPRNT</td></tr>
            </thead>
            <tbody>
            <tr><td><a href="#sendMessage">sendMessage</a>*1</td><td>○</td><td>○</td><td>○</td><td>○</td><td>○</td></tr>
            <tr><td><a href="#isCoverOpen">isCoverOpen</a></td><td>○</td><td>○</td><td>○</td><td>○</td><td>○</td></tr>
            <tr><td><a href="#isOffLine">isOffLine</a></td><td>○</td><td>○</td><td>○</td><td>○</td><td>○</td></tr>
            <tr><td><a href="#isCompulsionSwitchClose">isCompulsionSwitchClose</a></td><td>○</td><td>○</td><td>○</td><td>○</td><td>○</td></tr>
            <tr><td><a href="#isEtbCommandExecute">isEtbCommandExecute</a></td><td>○</td><td>○</td><td>○</td><td>○</td><td>○</td></tr>
            <tr><td><a href="#isHighTemperatureStop">isHighTemperatureStop</a></td><td>○</td><td>○</td><td>○</td><td>○</td><td>○</td></tr>
            <tr><td><a href="#isNonRecoverableError">isNonRecoverableError</a></td><td>○</td><td>○</td><td>○</td><td>○</td><td>○</td></tr>
            <tr><td><a href="#isAutoCutterError">isAutoCutterError</a></td><td>○</td><td>○</td><td>○</td><td>○</td><td>○</td></tr>
            <tr><td><a href="#isBlackMarkError">isBlackMarkError</a></td><td>○</td><td>-</td><td>○</td><td>○</td><td>-</td></tr>
            <tr><td><a href="#isPaperEnd">isPaperEnd</a></td><td>○</td><td>○</td><td>○</td><td>○</td><td>○</td></tr>
            <tr><td><a href="#isPaperNearEnd">isPaperNearEnd</a></td><td>○</td><td>○</td><td>○</td><td>○</td><td>○</td></tr>
            <tr><td><a href="#extractionEtbCounter">extractionEtbCounter</a></td><td>○</td><td>○</td><td>○</td><td>○</td><td>○</td></tr>            
            </tbody>
        </table>
        <p class="note2">
            *1 Bluetoothプリンターは印刷完了待ち有効固定<br />
            　　名前付き引数’checkedblock'は作用しない
        </p>


        <h5>モバイルプリンター</h5>
        <table class="List2">
            <thead>
                <tr><td>名称</td><td>SM-S210i</td><td>SM-S220i<br />(Jpモデル以外)</td><td>SM-T300i</td><td>SM-T400i</td></tr>
            </thead>
            <tbody>
            <tr><td><a href="#sendMessage">sendMessage</a>*1</td><td>○</td><td>○</td><td>○</td><td>○</td></tr>
            <tr><td><a href="#isCoverOpen">isCoverOpen</a></td><td>○</td><td>○</td><td>○</td><td>○</td></tr>
            <tr><td><a href="#isOffLine">isOffLine</a></td><td>○</td><td>○</td><td>○</td><td>○</td></tr>
            <tr><td><a href="#isCompulsionSwitchClose">isCompulsionSwitchClose</a></td><td>-</td><td>-</td><td>-</td><td>-</td></tr>
            <tr><td><a href="#isEtbCommandExecute">isEtbCommandExecute</a></td></td><td>-</td><td>-</td><td>-</td><td>-</td></tr>
            <tr><td><a href="#isHighTemperatureStop">isHighTemperatureStop</a></td></td><td>-</td><td>-</td><td>-</td><td>-</td></tr>
            <tr><td><a href="#isNonRecoverableError">isNonRecoverableError</a></td></td><td>-</td><td>-</td><td>-</td><td>-</td></tr>
            <tr><td><a href="#isAutoCutterError">isAutoCutterError</a></td></td><td>-</td><td>-</td><td>-</td><td>-</td></tr>
            <tr><td><a href="#isBlackMarkError">isBlackMarkError</a></td></td><td>-</td><td>-</td><td>-</td><td>-</td></tr>
            <tr><td><a href="#isPaperEnd">isPaperEnd</a></td><td>○</td><td>○</td><td>○</td><td>○</td></tr>
            <tr><td><a href="#isPaperNearEnd">isPaperNearEnd</a></td><td>-</td><td>-</td><td>-</td><td>-</td></tr>
            <tr><td><a href="#extractionEtbCounter">extractionEtbCounter</a></td></td><td>-</td><td>-</td><td>-</td><td>-</td></tr>            
            </tbody>
        </table>
        <p class="note2">
            *1 印刷完了待ち有効固定<br />
            　　名前付き引数’checkedblock'は作用しない
        </p>


        
    </article>

    <div class="to_top">
        <a href="#toTop"><img  src="../illust/TopMark.png">&nbsp;トップへ戻る</a>
    </div>
    

    <article id="StarWebPrintTrader">
        <h3>StarWebPrintTrader</h3>
    
        <div class="introduction_3">
            <p>
            StarWebPrintTraderオブジェクトを生成します。
            </p>
        </div>
    
        <div class="syntax">
        <h4>構文</h4>
        <p>
        StarWebPrintTrader(args);
        </p>
    
        <h4>名前付き引数</h4>
        <table class="coder">
            <thead>
                <tr><td>名称</td><td>説明</td><td>型</td><td>省略時</td></tr>
            </thead>
            <tbody>
                <tr><td>url</td><td>StarWebPRNTエンドポイントURL<br />※省略時はsendMessageメソッドで指定すること</td><td>String</td><td>-</td></tr>
                <tr><td>checkedblock</td><td>印刷完了待ち<br /><ul><li>true … 印刷完了待ち有効</li><li>false … 印刷完了待ち無効</li></ul></td>
                       <td>Boolean</td><td>true</td></tr>
            </tbody>
        </table>

        <h4>戻り値</h4>
        <table class="coder">
            <thead>
                <tr><td>説明</td><td>型</td></tr>
            </thead>
            <tbody>
                <tr><td>StarWebPrintTraderオブジェクト</td><td>StarWebPrintTrader</td></tr>
            </tbody>
        </table>

        <h5>例</h5>
<pre>
&lt;script type='text/javascript' src='js/StarWebPrintTrader.js'&gt;&lt;/script&gt;
&lt;script type='text/javascript'&gt;
&lt;!--
function onSend(url, request) {
　　var trader = new StarWebPrintTrader({url:url});

    trader.sendMessage({request:request});
}
// --&gt;
&lt;/script&gt;
</pre>
    </div>
    </article>

    <div class="to_top">
        <a href="#toTop"><img  src="../illust/TopMark.png">&nbsp;トップへ戻る</a>
    </div>
    
    <article id="sendMessage">
    
        <h3>sendMessage</h3>
        
        <div class="introduction_3">
            <p>
            StarWebPRNT送信エレメント列を送信します。
            </p>
        </div>
        
        <div class="syntax">
            <h4>構文</h4>
            <p>
            sendMessage(args);
            </p>
        </div>
        
        <h4>名前付き引数</h4>
        <table class="coder">
            <thead>
                <tr><td>名称</td><td>説明</td><td>型</td><td>省略時</td></tr>
            </thead>
            <tbody>
                <tr><td>url</td><td>StarWebPRNTエンドポイントURL</br>※省略時はStarWebPrintTraderコンストラクタで指定すること</td><td>String</td><td>-</td></tr>
                <tr><td>checkedblock</td>
                      <td>印刷完了待ち<br /><ul><li>true … 印刷完了待ち有効</li><li>false … 印刷完了待ち無効</li></ul><br />
                      ※省略時はStarWebPrintTraderコンストラクタで指定された値</td><td>Boolean</td><td>-</td></tr>
                <tr><td>request</td><td>StarWebPRNT送信エレメント列</td><td>String</td><td>省略不可</td></tr>
            </tbody>
        </table>

        <h4>戻り値</h4>
        <table class="coder">
            <thead>
                <tr><td>説明</td><td>型</td></tr>
            </thead>
            <tbody>
                <tr><td>-</td><td>-</td></tr>
            </tbody>
        </table>
    
        <h5>例</h5>
<pre>
&lt;script type='text/javascript' src='js/StarWebPrintTrader.js'&gt;&lt;/script&gt;
&lt;script type='text/javascript'&gt;
&lt;!--
function onSend(url, request) {
　　var trader = new StarWebPrintTrader({url:url});

    trader.sendMessage({request:request});
}
// --&gt;
&lt;/script&gt;
</pre>
    </article>

    <div class="to_top">
        <a href="#toTop"><img  src="../illust/TopMark.png">&nbsp;トップへ戻る</a>
    </div>
    
    <article id="isCoverOpen">
    
        <h3>isCoverOpen</h3>
        
        <div class="introduction_3">
            <p>
            StarWebPRNT受信エレメント列からカバーオープンか確認します。
            </p>
        </div>
        
        <div class="syntax">
            <h4>構文</h4>
            <p>
            isCoverOpen(args);
            </p>
        </div>
        
        <h4>名前付き引数</h4>
        <table class="coder">
            <thead>
                <tr><td>名称</td><td>説明</td><td>型</td><td>省略時</td></tr>
            </thead>
            <tbody>
                <tr><td>traderStatus</td><td>onReceiveイベントに渡されたresponseのtraderStatusプロパティ</td><td>String</td><td>省略不可</td></tr>
            </tbody>
        </table>

        <h4>戻り値</h4>
        <table class="coder">
            <thead>
                <tr><td>説明</td><td>型</td></tr>
            </thead>
            <tbody>
                <tr><td>カバーオープン状態<br /><ul><li>true … カバーオープン</li><li>false … カバークローズ</li></ul></td><td>Boolean</td></tr>
            </tbody>
        </table>
    
        <h5>例</h5>
<pre>
&lt;script type='text/javascript' src='js/StarWebPrintTrader.js'&gt;&lt;/script&gt;
&lt;script type='text/javascript'&gt;
&lt;!--
function onSend(url, request) {
　　var trader = new StarWebPrintTrader({url:url});

　　trader.onReceive = function (response) {
        if (trader.isCoverOpen({traderStatus:response.traderStatus})) {
            alert('CoverOpen');
　　　　}
　　}

    trader.sendMessage({request:request});
}
// --&gt;
&lt;/script&gt;
</pre>
    </article>

    <div class="to_top">
        <a href="#toTop"><img  src="../illust/TopMark.png">&nbsp;トップへ戻る</a>
    </div>
    
    <article id="isOffLine">
    
        <h3>isOffLine</h3>
        
        <div class="introduction_3">
            <p>
            StarWebPRNT受信エレメント列からオフラインか確認します。
            </p>
        </div>
        
        <div class="syntax">
            <h4>構文</h4>
            <p>
            isOffLine(args);
            </p>
        </div>
        
        <h4>名前付き引数</h4>
        <table class="coder">
            <thead>
                <tr><td>名称</td><td>説明</td><td>型</td><td>省略時</td></tr>
            </thead>
            <tbody>
                <tr><td>traderStatus</td><td>onReceiveイベントに渡されたresponseのtraderStatusプロパティ</td><td>String</td><td>省略不可</td></tr>
            </tbody>
        </table>

        <h4>戻り値</h4>
        <table class="coder">
            <thead>
                <tr><td>説明</td><td>型</td></tr>
            </thead>
            <tbody>
                <tr><td>オフライン状態<br /><ul><li>true … オフライン</li><li>false … オンライン</li></ul></td><td>Boolean</td></tr>
            </tbody>
        </table>
    
        <h5>例</h5>
<pre>
&lt;script type='text/javascript' src='js/StarWebPrintTrader.js'&gt;&lt;/script&gt;
&lt;script type='text/javascript'&gt;
&lt;!--
function onSend(url, request) {
　　var trader = new StarWebPrintTrader({url:url});

　　trader.onReceive = function (response) {
　　    if (trader.isOffLine({traderStatus:response.traderStatus})) {
　　　　　　alert('OffLine');
　　　　}
　　}

    trader.sendMessage({request:request});
}
// --&gt;
&lt;/script&gt;
</pre>
    </article>

    <div class="to_top">
        <a href="#toTop"><img  src="../illust/TopMark.png">&nbsp;トップへ戻る</a>
    </div>
    
    <article id="isCompulsionSwitchClose">
    
        <h3>isCompulsionSwitchClose</h3>
        
        <div class="introduction_3">
            <p>
            StarWebPRNT受信エレメント列からコンパルジョンスイッチがクローズしているか確認します。
            </p>
        </div>
        
        <div class="syntax">
            <h4>構文</h4>
            <p>
            isCompulsionSwitchClose(args);
            </p>
        </div>
        
        <h4>名前付き引数</h4>
        <table class="coder">
            <thead>
                <tr><td>名称</td><td>説明</td><td>型</td><td>省略時</td></tr>
            </thead>
            <tbody>
                <tr><td>traderStatus</td><td>onReceiveイベントに渡されたresponseのtraderStatusプロパティ</td><td>String</td><td>省略不可</td></tr>
            </tbody>
        </table>

        <h4>戻り値</h4>
        <table class="coder">
            <thead>
                <tr><td>説明</td><td>型</td></tr>
            </thead>
            <tbody>
                <tr><td>コンパルジョンスイッチ状態<br /><ul><li>true … コンパルジョンスイッチクローズ</li><li>false … コンパルジョンスイッチオープン</li></ul></td><td>Boolean</td></tr>
            </tbody>
        </table>
    
        <h5>例</h5>
<pre>
&lt;script type='text/javascript' src='js/StarWebPrintTrader.js'&gt;&lt;/script&gt;
&lt;script type='text/javascript'&gt;
&lt;!--
function onSend(url, request) {
　　var trader = new StarWebPrintTrader({url:url});

　　trader.onReceive = function (response) {
　　    if (trader.isCompulsionSwitchClose({traderStatus:response.traderStatus})) {
　　　　　　alert('CompulsionSwitchClose');
　　　　}
　　}

    trader.sendMessage({request:request});
}
// --&gt;
&lt;/script&gt;
</pre>
    </article>

    <div class="to_top">
        <a href="#toTop"><img  src="../illust/TopMark.png">&nbsp;トップへ戻る</a>
    </div>
    
    <article id="isEtbCommandExecute">
    
        <h3>isEtbCommandExecute</h3>
        
        <div class="introduction_3">
            <p>
            StarWebPRNT受信エレメント列からETBコマンド実行済みか確認します。
            </p>
        </div>
        
        <div class="syntax">
            <h4>構文</h4>
            <p>
            isEtbCommandExecute(args);
            </p>
        </div>
        
        <h4>名前付き引数</h4>
        <table class="coder">
            <thead>
                <tr><td>名称</td><td>説明</td><td>型</td><td>省略時</td></tr>
            </thead>
            <tbody>
                <tr><td>traderStatus</td><td>onReceiveイベントに渡されたresponseのtraderStatusプロパティ</td><td>String</td><td>省略不可</td></tr>
            </tbody>
        </table>

        <h4>戻り値</h4>
        <table class="coder">
            <thead>
                <tr><td>説明</td><td>型</td></tr>
            </thead>
            <tbody>
                <tr><td>ETBコマンド実行状態<br /><ul><li>true … ETBコマンド実行済み</li><li>false … ETBコマンド未実行</li></ul></td><td>Boolean</td></tr>
            </tbody>
        </table>
    
        <h5>例</h5>
<pre>
// --&gt;
&lt;script type='text/javascript' src='js/StarWebPrintTrader.js'&gt;&lt;/script&gt;
&lt;script type='text/javascript'&gt;
&lt;!--
function onSend(url, request) {
　　var trader = new StarWebPrintTrader({url:url});

　　trader.onReceive = function (response) {
　　    if (trader.isEtbCommandExecute({traderStatus:response.traderStatus})) {
　　　　　　alert('EtbCommandExecute');
　　　　}
　　}

    trader.sendMessage({request:request});
}
// --&gt;
&lt;/script&gt;
</pre>
    </article>

    <div class="to_top">
        <a href="#toTop"><img  src="../illust/TopMark.png">&nbsp;トップへ戻る</a>
    </div>
    
    <article id="isHighTemperatureStop">
    
        <h3>isHighTemperatureStop</h3>
        
        <div class="introduction_3">
            <p>
            StarWebPRNT受信エレメント列から印字ヘッド高温停止中か確認します。
            </p>
        </div>
        
        <div class="syntax">
            <h4>構文</h4>
            <p>
            isHighTemperatureStop(args);
            </p>
        </div>
        
        <h4>名前付き引数</h4>
        <table class="coder">
            <thead>
                <tr><td>名称</td><td>説明</td><td>型</td><td>省略時</td></tr>
            </thead>
            <tbody>
                <tr><td>traderStatus</td><td>onReceiveイベントに渡されたresponseのtraderStatusプロパティ</td><td>String</td><td>省略不可</td></tr>
            </tbody>
        </table>

        <h4>戻り値</h4>
        <table class="coder">
            <thead>
                <tr><td>説明</td><td>型</td></tr>
            </thead>
            <tbody>
                <tr><td>印字ヘッド高温停止状態<br /><ul><li>true … 印字ヘッド高温停止</li><li>false … 印字ヘッド高温未停止</li></ul></td><td>Boolean</td></tr>
            </tbody>
        </table>
    
        <h5>例</h5>
<pre>
// --&gt;
&lt;script type='text/javascript' src='js/StarWebPrintTrader.js'&gt;&lt;/script&gt;
&lt;script type='text/javascript'&gt;
&lt;!--
function onSend(url, request) {
　　var trader = new StarWebPrintTrader({url:url});

　　trader.onReceive = function (response) {
　　    if (trader.isHighTemperatureStop({traderStatus:response.traderStatus})) {
　　　　　　alert('HighTemperatureStop');
　　　　}
　　}

    trader.sendMessage({request:request});
}
// --&gt;
&lt;/script&gt;
</pre>
    </article>

    <div class="to_top">
        <a href="#toTop"><img  src="../illust/TopMark.png">&nbsp;トップへ戻る</a>
    </div>
    
    <article id="isNonRecoverableError">
    
        <h3>isNonRecoverableError</h3>
        
        <div class="introduction_3">
            <p>
            StarWebPRNT受信エレメント列から復帰不可能エラーか確認します。
            </p>
        </div>
        
        <div class="syntax">
            <h4>構文</h4>
            <p>
            isNonRecoverableError(args);
            </p>
        </div>
        
        <h4>名前付き引数</h4>
        <table class="coder">
            <thead>
                <tr><td>名称</td><td>説明</td><td>型</td><td>省略時</td></tr>
            </thead>
            <tbody>
                <tr><td>traderStatus</td><td>onReceiveイベントに渡されたresponseのtraderStatusプロパティ</td><td>String</td><td>省略不可</td></tr>
            </tbody>
        </table>

        <h4>戻り値</h4>
        <table class="coder">
            <thead>
                <tr><td>説明</td><td>型</td></tr>
            </thead>
            <tbody>
                <tr><td>復帰不可能エラー状態<br /><ul><li>true … 復帰不可能エラー発生</li><li>false … 復帰不可能エラー未発生</li></ul></td><td>Boolean</td></tr>
            </tbody>
        </table>
    
        <h5>例</h5>
<pre>
// --&gt;
&lt;script type='text/javascript' src='js/StarWebPrintTrader.js'&gt;&lt;/script&gt;
&lt;script type='text/javascript'&gt;
&lt;!--
function onSend(url, request) {
　　var trader = new StarWebPrintTrader({url:url});

　　trader.onReceive = function (response) {
　　    if (trader.isNonRecoverableError({traderStatus:response.traderStatus})) {
　　　　　　alert('NonRecoverableError');
　　　　}
　　}

    trader.sendMessage({request:request});
}
// --&gt;
&lt;/script&gt;
</pre>
    </article>

    <div class="to_top">
        <a href="#toTop"><img  src="../illust/TopMark.png">&nbsp;トップへ戻る</a>
    </div>
    
    <article id="isAutoCutterError">
    
        <h3>isAutoCutterError</h3>
        
        <div class="introduction_3">
            <p>
            StarWebPRNT受信エレメント列から用紙カッターエラーか確認します。
            </p>
        </div>
        
        <div class="syntax">
            <h4>構文</h4>
            <p>
            isAutoCutterError(args);
            </p>
        </div>
        
        <h4>名前付き引数</h4>
        <table class="coder">
            <thead>
                <tr><td>名称</td><td>説明</td><td>型</td><td>省略時</td></tr>
            </thead>
            <tbody>
                <tr><td>traderStatus</td><td>onReceiveイベントに渡されたresponseのtraderStatusプロパティ</td><td>String</td><td>省略不可</td></tr>
            </tbody>
        </table>

        <h4>戻り値</h4>
        <table class="coder">
            <thead>
                <tr><td>説明</td><td>型</td></tr>
            </thead>
            <tbody>
                <tr><td>用紙カッターエラー状態<br /><ul><li>true … 用紙カッターエラー発生</li><li>false … 用紙カッターエラー未発生</li></ul></td><td>Boolean</td></tr>
            </tbody>
        </table>
    
        <h5>例</h5>
<pre>
// --&gt;
&lt;script type='text/javascript' src='js/StarWebPrintTrader.js'&gt;&lt;/script&gt;
&lt;script type='text/javascript'&gt;
&lt;!--
function onSend(url, request) {
　　var trader = new StarWebPrintTrader({url:url});

　　trader.onReceive = function (response) {
　　    if (trader.isAutoCutterError({traderStatus:response.traderStatus})) {
　　　　　　alert('AutoCutterError');
　　　　}
　　}

    trader.sendMessage({request:request});
}
// --&gt;
&lt;/script&gt;
</pre>
    </article>

    <div class="to_top">
        <a href="#toTop"><img  src="../illust/TopMark.png">&nbsp;トップへ戻る</a>
    </div>
    
    <article id="isBlackMarkError">
    
        <h3>isBlackMarkError</h3>
        
        <div class="introduction_3">
            <p>
            StarWebPRNT受信エレメント列からブラックマークエラーか確認します。
            </p>
        </div>
        
        <div class="syntax">
            <h4>構文</h4>
            <p>
            isBlackMarkError(args);
            </p>
        </div>
        
        <h4>名前付き引数</h4>
        <table class="coder">
            <thead>
                <tr><td>名称</td><td>説明</td><td>型</td><td>省略時</td></tr>
            </thead>
            <tbody>
                <tr><td>traderStatus</td><td>onReceiveイベントに渡されたresponseのtraderStatusプロパティ</td><td>String</td><td>省略不可</td></tr>
            </tbody>
        </table>

        <h4>戻り値</h4>
        <table class="coder">
            <thead>
                <tr><td>説明</td><td>型</td></tr>
            </thead>
            <tbody>
                <tr><td>ブラックマークエラー状態<br /><ul><li>true … ブラックマークエラー発生</li><li>false … ブラックマークエラー未発生</li></ul></td><td>Boolean</td></tr>
            </tbody>
        </table>
    
        <h5>例</h5>
<pre>
// --&gt;
&lt;script type='text/javascript' src='js/StarWebPrintTrader.js'&gt;&lt;/script&gt;
&lt;script type='text/javascript'&gt;
&lt;!--
function onSend(url, request) {
　　var trader = new StarWebPrintTrader({url:url});

　　trader.onReceive = function (response) {
　　    if (trader.isBlackMarkError({traderStatus:response.traderStatus})) {
　　　　　　alert('BlackMarkError');
　　　　}
　　}

    trader.sendMessage({request:request});
}
// --&gt;
&lt;/script&gt;
</pre>
    </article>

    <div class="to_top">
        <a href="#toTop"><img  src="../illust/TopMark.png">&nbsp;トップへ戻る</a>
    </div>
    
    <article id="isPaperEnd">
    
        <h3>isPaperEnd</h3>
        
        <div class="introduction_3">
            <p>
            StarWebPRNT受信エレメント列から用紙エンドか確認します。
            </p>
        </div>
        
        <div class="syntax">
            <h4>構文</h4>
            <p>
            isPaperEnd(args);
            </p>
        </div>
        
        <h4>名前付き引数</h4>
        <table class="coder">
            <thead>
                <tr><td>名称</td><td>説明</td><td>型</td><td>省略時</td></tr>
            </thead>
            <tbody>
                <tr><td>traderStatus</td><td>onReceiveイベントに渡されたresponseのtraderStatusプロパティ</td><td>String</td><td>省略不可</td></tr>
            </tbody>
        </table>

        <h4>戻り値</h4>
        <table class="coder">
            <thead>
                <tr><td>説明</td><td>型</td></tr>
            </thead>
            <tbody>
                <tr><td>用紙エンド状態<br /><ul><li>true … 用紙エンド発生</li><li>false … 用紙エンド未発生</li></ul></td><td>Boolean</td></tr>
            </tbody>
        </table>
    
        <h5>例</h5>
<pre>
// --&gt;
&lt;script type='text/javascript' src='js/StarWebPrintTrader.js'&gt;&lt;/script&gt;
&lt;script type='text/javascript'&gt;
&lt;!--
function onSend(url, request) {
　　var trader = new StarWebPrintTrader({url:url});

　　trader.onReceive = function (response) {
　　    if (trader.isPaperEnd({traderStatus:response.traderStatus})) {
　　　　　　alert('PaperEnd');
　　　　}
　　}

    trader.sendMessage({request:request});
}
// --&gt;
&lt;/script&gt;
</pre>
    </article>

    <div class="to_top">
        <a href="#toTop"><img  src="../illust/TopMark.png">&nbsp;トップへ戻る</a>
    </div>
    
    <article id="isPaperNearEnd">
    
        <h3>isPaperNearEnd</h3>
        
        <div class="introduction_3">
            <p>
            StarWebPRNT受信エレメント列から用紙ニアエンドか確認します。
            </p>
        </div>
        
        <div class="syntax">
            <h4>構文</h4>
            <p>
            isPaperNearEnd(args);
            </p>
        </div>
        
        <h4>名前付き引数</h4>
        <table class="coder">
            <thead>
                <tr><td>名称</td><td>説明</td><td>型</td><td>省略時</td></tr>
            </thead>
            <tbody>
                <tr><td>traderStatus</td><td>onReceiveイベントに渡されたresponseのtraderStatusプロパティ</td><td>String</td><td>省略不可</td></tr>
            </tbody>
        </table>

        <h4>戻り値</h4>
        <table class="coder">
            <thead>
                <tr><td>説明</td><td>型</td></tr>
            </thead>
            <tbody>
                <tr><td>用紙ニアエンド状態<br /><ul><li>true … 用紙ニアエンド発生</li><li>false … 用紙ニアエンド未発生</li></ul></td><td>Boolean</td></tr>
            </tbody>
        </table>
    
        <h5>例</h5>
<pre>
// --&gt;
&lt;script type='text/javascript' src='js/StarWebPrintTrader.js'&gt;&lt;/script&gt;
&lt;script type='text/javascript'&gt;
&lt;!--
function onSend(url, request) {
　　var trader = new StarWebPrintTrader({url:url});

　　trader.onReceive = function (response) {
　　    if (trader.isPaperNearEnd({traderStatus:response.traderStatus})) {
            alert('PaperNearEnd');
　　　　}
　　}

    trader.sendMessage({request:request});
}
// --&gt;
&lt;/script&gt;
</pre>
    </article>

    <div class="to_top">
        <a href="#toTop"><img  src="../illust/TopMark.png">&nbsp;トップへ戻る</a>
    </div>
    
    <article id="extractionEtbCounter">
    
        <h3>extractionEtbCounter</h3>
        
        <div class="introduction_3">
            <p>
            StarWebPRNT受信エレメント列からETBカウンタを抽出します。
            </p>
        </div>
        
        <div class="syntax">
            <h4>構文</h4>
            <p>
            extractionEtbCounter(args);
            </p>
        </div>
        
        <h4>名前付き引数</h4>
        <table class="coder">
            <thead>
                <tr><td>名称</td><td>説明</td><td>型</td><td>省略時</td></tr>
            </thead>
            <tbody>
                <tr><td>traderStatus</td><td>onReceiveイベントに渡されたresponseのtraderStatusプロパティ</td><td>String</td><td>省略不可</td></tr>
            </tbody>
        </table>

        <h4>戻り値</h4>
        <table class="coder">
            <thead>
                <tr><td>説明</td><td>型</td></tr>
            </thead>
            <tbody>
                <tr><td>ETBカウンタ値</td><td>Number</td></tr>
            </tbody>
        </table>
    
        <h5>例</h5>
<pre>
// --&gt;
&lt;script type='text/javascript' src='js/StarWebPrintTrader.js'&gt;&lt;/script&gt;
&lt;script type='text/javascript'&gt;
&lt;!--
function onSend(url, request) {
　　var trader = new StarWebPrintTrader({url:url});

　　trader.onReceive = function (response) {
　　    alert('EtbCounter = ' + trader.extractionEtbCounter({traderStatus:response.traderStatus}).toString();
　　}

    trader.sendMessage({request:request});
}
// --&gt;
&lt;/script&gt;
</pre>
    </article>

    <div class="to_top">
        <a href="#toTop"><img  src="../illust/TopMark.png">&nbsp;トップへ戻る</a>
    </div>
    
    <article id="onReceive">
    
        <h3>onReceive</h3>
        
        <div class="introduction_3">
            <p>
            正常受信イベント
            </p>
        </div>
        
        <div class="syntax">
            <h4>構文</h4>
            <p>
            function(response);
            </p>
        </div>
        
        <h4>名前付き引数</h4>
        <table class="coder">
            <thead>
                <tr><td>名称</td><td>説明</td><td>型</td></tr>
            </thead>
            <tbody>
                <tr><td>traderSuccess</td><td>印刷結果<br /><ul><li>true … 印刷成功</li><li>false … 印刷失敗</li></ul></td><td>Boolean</td></tr>
                <tr><td>traderCode</td><td>終了コード<br /><ul><li>0 … 正常終了</li>
                                                               <li>1100 … プリンターオフライン状態（エラー発生中）</li>
                                                               <li>2001 … プリンタービジー状態（他の端末機器がプリンター使用中：要再送）</li></ul></td><td>Number</td></tr>
                <tr><td>traderStatus</td><td>スター自動ステータス<br />※コマンド仕様書参照</td><td>String</td></tr>
                <tr><td>status</td><td>XMLHttpRequestオブジェクトのstatusプロパティ<br />※XMLHttpRequest仕様参照</td><td>Number</td></tr>
                <tr><td>responseText</td><td>XMLHttpRequestオブジェクトのresponseTextプロパティ<br />※XMLHttpRequest仕様参照</td><td>String</td></tr>
            </tbody>
        </table>
    
        <h5>例</h5>
<pre>
// --&gt;
&lt;script type='text/javascript' src='js/StarWebPrintTrader.js'&gt;&lt;/script&gt;
&lt;script type='text/javascript'&gt;
&lt;!--
function onSend(url, request) {
　　var trader = new StarWebPrintTrader({url:url});

　　trader.onReceive = function (response) {
        var msg = '- onReceive -\n\n';

        msg += 'TraderSuccess:' + response.traderSuccess + '\n';

　      msg += 'TraderCode:' + response.traderCode + '\n';

        msg += 'TraderStatus:' + response.traderStatus + '\n';

        msg += 'Status:' + response.status + '\n';

　      msg += 'ResponseText:' + response.responseText;

        alert(msg);
　　}

    trader.onError = function (response) {
        var msg = '- onError -\n\n';

        msg += '\tStatus:' + response.status + '\n';

        msg += '\tResponseText:' + response.responseText;

        alert(msg);
    }

    trader.sendMessage({request:request});
}
// --&gt;
&lt;/script&gt;
</pre>
    </article>

    <div class="to_top">
        <a href="#toTop"><img  src="../illust/TopMark.png">&nbsp;トップへ戻る</a>
    </div>
    
    <article id="onError">
    
        <h3>onError</h3>
        
        <div class="introduction_3">
            <p>
            異常受信イベント
            </p>
        </div>
        
        <div class="syntax">
            <h4>構文</h4>
            <p>
            function(response);
            </p>
        </div>
        
        <h4>名前付き引数</h4>
        <table class="coder">
            <thead>
                <tr><td>名称</td><td>説明</td><td>型</td></tr>
            </thead>
            <tbody>
                <tr><td>status</td><td>XMLHttpRequestオブジェクトのstatusプロパティ<br />※XMLHttpRequest仕様参照</td><td>Number</td></tr>
                <tr><td>responseText</td><td>XMLHttpRequestオブジェクトのresponseTextプロパティ<br />※XMLHttpRequest仕様参照</td><td>String</td></tr>
            </tbody>
        </table>
    
        <h5>例</h5>
<pre>
// --&gt;
&lt;script type='text/javascript' src='js/StarWebPrintTrader.js'&gt;&lt;/script&gt;
&lt;script type='text/javascript'&gt;
&lt;!--
function onSend(url, request) {
　　var trader = new StarWebPrintTrader({url:url});

　　trader.onReceive = function (response) {
        var msg = '- onReceive -\n\n';

        msg += 'TraderSuccess:' + response.traderSuccess + '\n';

　      msg += 'TraderCode:' + response.traderCode + '\n';

        msg += 'TraderStatus:' + response.traderStatus + '\n';

        msg += 'Status:' + response.status + '\n';

　      msg += 'ResponseText:' + response.responseText;

        alert(msg);
　　}

    trader.onError = function (response) {
        var msg = '- onError -\n\n';

        msg += '\tStatus:' + response.status + '\n';

        msg += '\tResponseText:' + response.responseText;

        alert(msg);
    }

    trader.sendMessage({request:request});
}
// --&gt;
&lt;/script&gt;
</pre>
    </article>

    <div class="to_top">
        <a href="#toTop"><img  src="../illust/TopMark.png">&nbsp;トップへ戻る</a>
    </div>


    </div>    <!-- Main Contents  -->

</div>		<!-- Wrapp -->

<footer id="footer">
<p id="copyright"> &copy; Copyright 2013 - 2014  <a href="http://www.star-m.jp/">Star Micronics Co., Ltd.</a> </p>
</footer>

</body>
</html>
